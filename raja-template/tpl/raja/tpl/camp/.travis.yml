sudo: required
services: docker
dist: trusty
language: cpp
env:
  global:
  - OMP_NUM_THREADS=3
  - DO_BUILD=yes
  - DO_TEST=yes
matrix:
  include:
  - compiler: gcc49
    env:
    - COMPILER=g++
    - IMG=gcc49
    - CMAKE_EXTRA_FLAGS="-DENABLE_WARNINGS=On -DENABLE_TBB=On -DRAJA_DEPRECATED_TESTS=On"
  - compiler: gcc6
    env:
    - COMPILER=g++
    - IMG=gcc6
    - CMAKE_EXTRA_FLAGS="-DENABLE_WARNINGS=On -DENABLE_TBB=On"
  - compiler: gcc7
    env:
    - COMPILER=g++
    - IMG=gcc7
    - CMAKE_EXTRA_FLAGS="-DENABLE_WARNINGS=On -DENABLE_TBB=On"
  - compiler: gcc8
    env:
    - COMPILER=g++
    - IMG=gcc8
    - CMAKE_EXTRA_FLAGS="-DENABLE_WARNINGS=On -DENABLE_TBB=On"
  - compiler: clang6
    env:
    - COMPILER=clang++
    - IMG=clang6
    - CMAKE_EXTRA_FLAGS="-DCMAKE_CXX_FLAGS=-fmodules -DENABLE_TBB=On"
  - compiler: clang5
    env:
    - COMPILER=clang++
    - IMG=clang5
    - CMAKE_EXTRA_FLAGS="-DCMAKE_CXX_FLAGS=-fmodules -DENABLE_TBB=On"
  - compiler: nvcc
    env:
    - COMPILER=g++
    - IMG=nvcc9
    - CMAKE_EXTRA_FLAGS="-DENABLE_CUDA=On -DENABLE_TBB=On"
    - DO_TEST=no
  - compiler: gcc-4.9-debug
    env:
    - COMPILER=g++
    - IMG=gcc49
    - CMAKE_EXTRA_FLAGS="-DCMAKE_BUILD_TYPE=Debug -DENABLE_WARNINGS=On -DENABLE_WARNINGS_AS_ERRORS=On -DENABLE_TBB=On"
  - compiler: clang-6-debug
    env:
    - COMPILER=clang++
    - IMG=clang6
    - CMAKE_EXTRA_FLAGS="-DCMAKE_BUILD_TYPE=Debug -DENABLE_TBB=On -DCMAKE_CXX_FLAGS=-fsanitize=address"
    - ASAN_OPTIONS=detect_leaks=0
    - "LSAN_OPTIONS=verbosity=1:log_threads=1"
  - compiler: nvcc-debug
    env:
    - COMPILER=g++
    - IMG=nvcc9
    - CMAKE_EXTRA_FLAGS="-DCMAKE_BUILD_TYPE=Debug -DENABLE_CUDA=On -DENABLE_WARNINGS=On -DENABLE_WARNINGS_AS_ERRORS=On -DENABLE_TBB=On"
    - DO_TEST=no
  - compiler: clang-cuda
    env:
    - COMPILER=clang++
    - IMG=clang-cuda
    - CMAKE_EXTRA_FLAGS="-DCMAKE_BUILD_TYPE=Release -DENABLE_OPENMP=Off -DENABLE_CLANG_CUDA=On -DBLT_CLANG_CUDA_ARCH=sm_60 -DENABLE_CUDA=On -DCUDA_ARCH=sm_60"
    - DO_TEST=no

before_install:
- export LSAN_OPTIONS
- export ASAN_OPTIONS

script:
- docker run --rm --user='root' -v ${TRAVIS_BUILD_DIR}:/home/raja rajaorg/compiler:$IMG chown -R raja /home/raja
- docker run --rm -v ${TRAVIS_BUILD_DIR}:/home/raja -e ASAN_OPTIONS -e LSAN_OPTIONS -e COMPILER -e DO_BUILD -e DO_TEST -e CMAKE_EXTRA_FLAGS rajaorg/compiler:$IMG ./scripts/travis_build_and_test.sh

